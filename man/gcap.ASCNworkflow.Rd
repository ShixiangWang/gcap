% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ASCNworkflow.R
\name{gcap.ASCNworkflow}
\alias{gcap.ASCNworkflow}
\title{GCAP workflow for gene-level amplicon prediction from ASCN input}
\usage{
gcap.ASCNworkflow(
  data,
  genome_build = c("hg38", "hg19"),
  model = "XGB32",
  target = "circle",
  outdir = getwd(),
  result_file_prefix = paste0("gcap_", uuid::UUIDgenerate(TRUE))
)
}
\arguments{
\item{data}{a \code{data.frame} with following rows. The key columns can be obtained
from common allele specific CNV calling software, e.g., ASCAT, Sequenza, FACETS.
\itemize{
\item chromosome: chromosome names starts with 'chr'.
\item start: start position of the segment.
\item end: end position of the segment.
\item total_cn: total integer copy number of the segment.
\item minor_cn: minor allele integer copy number of the segment. Set it
to \code{NA} if you don't have this data.
\item sample: sample identifier.
\item purity: tumor purity of the sample. Set to \code{1} if you don't know.
\item ploidy (optinal): ploidy value of the sample tumor genome.
\item age (optional): age of the case, use along with \code{gender}.
\item gender (optional): gender of the case, use along with \code{age}.
}}

\item{genome_build}{genome build version, should be
one of 'hg38', 'hg19'.}

\item{model}{model name ("XGB11", "XGB32", "XGB54") or a custom model
from input. 'toy' can be used for test.}

\item{target}{one of 'circle' and 'nonLinear' to select model
if predict circle amplicon or non-linear amplicon.}

\item{outdir}{result output path.}

\item{result_file_prefix}{file name prefix (without directory path) for storing
final model prediction file in CSV format.
Default a unique file name is generated by UUID approach.}
}
\value{
a list of invisible \code{data.table} and corresponding files saved to local machine.
}
\description{
Unlike \link{gcap.workflow}, this function directly uses the allele-specific
copy number data along with some extra sample information to infer
ecDNA genes.
}
\examples{
data("ascn")
data <- ascn
rv <- gcap.ASCNworkflow(data, outdir = tempdir(), model = "XGB11")
data$purity <- 1
rv2 <- gcap.ASCNworkflow(data, outdir = tempdir(), model = "XGB11")
data$age <- 60
data$gender <- "XY"
rv3 <- gcap.ASCNworkflow(data, outdir = tempdir(), model = "XGB32")
# If you only have total integer copy number
data$minor_cn <- NA
rv4 = gcap.ASCNworkflow(data, outdir = tempdir(), model = "XGB11")
}
